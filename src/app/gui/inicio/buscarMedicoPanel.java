package app.gui.inicio;

import app.dataStruct.Lista;
import app.logic.Fecha;
import app.logic.users.Usuario;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * Programa AsclepioHC InicioPanel permite entrar y registrar
 *
 */
public class buscarMedicoPanel extends javax.swing.JPanel {

    // Atributo de lista
    private static Lista usuarios;
    // Modelo lista
    DefaultListModel dlm = new DefaultListModel();

    private Usuario usuario;
    private static Usuario medicoEncontrado;

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    /**
     * Creates new form inicioPanel
     *
     * @param usuario
     */
    public buscarMedicoPanel(Usuario usuario) {
        initComponents();
        modificarMedicoButton.setVisible(false);
        eliminarMedicoButton.setVisible(false);
        lstResultados.setModel(dlm);
        // Invoca al método actualizarFecha enviando un objeto de fecha actual para actualizar el label fecha con la fecha actual 
        actualizarFecha(new Fecha());
        this.usuario = usuario;
        usuarios = InicioForm.getUsuarios();

        // Permite solamente ingresar letras en el text field
        cedulaTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
                    e.consume();  // ignore the event if it's not an alphabet
                }
            }
        }
        );

        /*
        // Permite solamente ingresar dígitos en el text field
        paramTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
                    e.consume();  // ignore the event if it's not an alphabet
                }
            }
        }
        );
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        fechaLabel = new javax.swing.JLabel();
        bienvenidaLabel = new javax.swing.JLabel();
        msg2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        todosBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstResultados = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        cedulaTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        buscarPacienteButton = new javax.swing.JButton();
        modificarMedicoButton = new javax.swing.JButton();
        eliminarMedicoButton = new javax.swing.JButton();
        apellidoLabel = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();
        fondo1 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(870, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(18, 84, 136));
        jPanel1.setForeground(new java.awt.Color(255, 153, 153));

        fechaLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fechaLabel.setForeground(new java.awt.Color(255, 255, 255));
        fechaLabel.setText("El día de hoy es -- de -- del año --");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(fechaLabel)
                .addContainerGap(468, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(fechaLabel)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        bg.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 870, 60));

        bienvenidaLabel.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        bienvenidaLabel.setForeground(new java.awt.Color(102, 0, 153));
        bienvenidaLabel.setText("Búsqueda Médico");
        bg.add(bienvenidaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        msg2.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        msg2.setForeground(new java.awt.Color(0, 0, 102));
        bg.add(msg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, -1, -1));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 480, 20));

        todosBtn.setBackground(new java.awt.Color(18, 84, 136));
        todosBtn.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        todosBtn.setForeground(new java.awt.Color(255, 255, 255));
        todosBtn.setText("Mostrar todos");
        todosBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        todosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosBtnActionPerformed(evt);
            }
        });
        bg.add(todosBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 180, 40));

        lstResultados.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jScrollPane2.setViewportView(lstResultados);

        bg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 710, 150));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Ingrese la cédula del médico a buscar");
        bg.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        cedulaTxt.setBackground(new java.awt.Color(102, 102, 102));
        cedulaTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        cedulaTxt.setForeground(new java.awt.Color(255, 255, 255));
        cedulaTxt.setBorder(null);
        cedulaTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        cedulaTxt.setOpaque(true);
        cedulaTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        cedulaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaTxtActionPerformed(evt);
            }
        });
        bg.add(cedulaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 130, 30));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 130, 10));

        buscarPacienteButton.setBackground(new java.awt.Color(18, 84, 136));
        buscarPacienteButton.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        buscarPacienteButton.setForeground(new java.awt.Color(255, 255, 255));
        buscarPacienteButton.setText("Buscar Médico");
        buscarPacienteButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buscarPacienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPacienteButtonActionPerformed(evt);
            }
        });
        bg.add(buscarPacienteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 200, -1));

        modificarMedicoButton.setBackground(new java.awt.Color(0, 204, 204));
        modificarMedicoButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        modificarMedicoButton.setForeground(new java.awt.Color(0, 0, 0));
        modificarMedicoButton.setText("Modificar Medico");
        modificarMedicoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarMedicoButtonActionPerformed(evt);
            }
        });
        bg.add(modificarMedicoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 200, 40));

        eliminarMedicoButton.setBackground(new java.awt.Color(255, 153, 0));
        eliminarMedicoButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        eliminarMedicoButton.setForeground(new java.awt.Color(0, 0, 0));
        eliminarMedicoButton.setText("Eliminar Medico");
        eliminarMedicoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMedicoButtonActionPerformed(evt);
            }
        });
        bg.add(eliminarMedicoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 200, 40));

        apellidoLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        apellidoLabel.setForeground(new java.awt.Color(51, 51, 51));
        apellidoLabel.setText("apellido");
        bg.add(apellidoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, -1));

        nombreLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nombreLabel.setForeground(new java.awt.Color(51, 51, 51));
        nombreLabel.setText("nombre");
        bg.add(nombreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Encontrado:");
        bg.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        fondo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fondo.setForeground(new java.awt.Color(51, 51, 51));
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/backgroundMain.jpg"))); // NOI18N
        bg.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        fondo1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fondo1.setForeground(new java.awt.Color(51, 51, 51));
        fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/backgroundMain.jpg"))); // NOI18N
        bg.add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 130, 10));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 51));
        jLabel10.setText("Ingrese la cédula del médico a buscar");
        bg.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void todosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosBtnActionPerformed
        actualizarLista();
    }//GEN-LAST:event_todosBtnActionPerformed

    private void cedulaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaTxtActionPerformed

    }//GEN-LAST:event_cedulaTxtActionPerformed

    private void buscarPacienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPacienteButtonActionPerformed

        medicoEncontrado = buscarMedico(cedulaTxt.getText());

        if (medicoEncontrado != null) {
            nombreLabel.setText("Nombre: " + medicoEncontrado.getNombre());
            apellidoLabel.setText("Apellido: " + medicoEncontrado.getApellido());
            modificarMedicoButton.setVisible(true);
            eliminarMedicoButton.setVisible(true);
            //eliminarMedicoButton.setVisible(true);
            // Habilita los botones
        } else {
            JOptionPane.showMessageDialog(null, "No encontrado");
        }
    }//GEN-LAST:event_buscarPacienteButtonActionPerformed

    private void modificarMedicoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarMedicoButtonActionPerformed
        buscarPacienteButtonActionPerformed(evt);

        ModificarMedicoGui ventanaModificar = new ModificarMedicoGui(medicoEncontrado);
        ventanaModificar.setVisible(true);
        ventanaModificar.setLocationRelativeTo(null);

        nombreLabel.setText("Nombre: " + medicoEncontrado.getNombre());
        apellidoLabel.setText("Apellido: " + medicoEncontrado.getApellido());

    }//GEN-LAST:event_modificarMedicoButtonActionPerformed

    private void eliminarMedicoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMedicoButtonActionPerformed
        /*
        try {
            Main.eliminarUsuarioDataBase(this.pacienteActual.getCedula());
            JOptionPane.showMessageDialog(null, "Eliminado correctamente");
            modificarMedicoButton.setVisible(false);
            eliminarMedicoButton.setVisible(false);
            this.pacienteActual = null;
            nombreLabel.setText("Nombre: ");
            apellidoLabel.setText("Apellido:");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
         */
    }//GEN-LAST:event_eliminarMedicoButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel bienvenidaLabel;
    private javax.swing.JButton buscarPacienteButton;
    private javax.swing.JTextField cedulaTxt;
    private javax.swing.JButton eliminarMedicoButton;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel fondo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JList<String> lstResultados;
    private javax.swing.JButton modificarMedicoButton;
    private javax.swing.JLabel msg2;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JButton todosBtn;
    // End of variables declaration//GEN-END:variables

    private void actualizarFecha(Fecha actual) {
        fechaLabel.setText("Hoy es " + actual.getDia() + " de " + actual.getMesString() + " del año " + actual.getAnio() + " ");
    }

    /**
     * Recibe como parametro la cedula y verifica si es una cédula Ecuatoriana
     * válida
     *
     * @param document String cédula a evaluar
     * @return boolean true si es una cédula válida, false en caso de ser
     * inválida
     */
    private boolean validarCedula(String document) {
        byte sum = 0;
        try {
            if (document.trim().length() != 10) {
                JOptionPane.showMessageDialog(null, "Cédula debe constar de 10 dígitos");
                return false;
            }
            String[] data = document.split("");
            byte verifier = Byte.parseByte(data[0] + data[1]);
            if (verifier < 1 || verifier > 24) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            byte[] digits = new byte[data.length];
            for (byte i = 0; i < digits.length; i++) {
                digits[i] = Byte.parseByte(data[i]);
            }
            if (digits[2] > 6) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            for (byte i = 0; i < digits.length - 1; i++) {
                if (i % 2 == 0) {
                    verifier = (byte) (digits[i] * 2);
                    if (verifier > 9) {
                        verifier = (byte) (verifier - 9);
                    }
                } else {
                    verifier = digits[i];
                }
                sum = (byte) (sum + verifier);
            }
            if ((sum - (sum % 10) + 10 - sum) == digits[9]) {
                return true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
        return false;
    }

    private void vaciarCampos() {
        cedulaTxt.setText("");

    }

    public void actualizarLista() {
        dlm.removeAllElements();
        usuarios = InicioForm.getUsuarios();
        usuarios.getUsuarios().forEach(usuario -> {
            if (usuario.getRol().equals("Medico")) {
                dlm.addElement(usuario.toString());
            }
        });
    }

    private Usuario buscarMedico(String cedula) {
        dlm.removeAllElements();

        for (Usuario medico : usuarios.getUsuarios()) {
            if (medico.getCedula().equals(cedula)) {
                dlm.addElement(medico.toString());
                return medico;
            }
        }
        return null;
    }
}
