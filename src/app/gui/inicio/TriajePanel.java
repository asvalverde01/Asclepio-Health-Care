package app.gui.inicio;

import app.dataStruct.ListaPacientes;
import app.gui.paciente.ModificarPacienteGui;
import app.logic.users.Paciente;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class TriajePanel extends javax.swing.JPanel {

    // Atributo de lista
    private static ListaPacientes listaPacientes;
    private Paciente pacienteActual;

    // Modelo lista
    private DefaultListModel dlm = new DefaultListModel();

    /**
     * Creates new form inicioPanel
     *
     * @param usuario
     */
    public TriajePanel() {
        initComponents();
        pacienteActual = null;
        setInformation();
        modificarPacienteButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cedulaTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        buscarPacienteButton = new javax.swing.JButton();
        nombreLabel = new javax.swing.JLabel();
        apellidoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        modificarPacienteButton = new javax.swing.JButton();
        tituloLabel = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        fondo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cedulaTxt.setBackground(new java.awt.Color(102, 102, 102));
        cedulaTxt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        cedulaTxt.setForeground(new java.awt.Color(255, 255, 255));
        cedulaTxt.setText("0605226992");
        cedulaTxt.setBorder(null);
        cedulaTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        cedulaTxt.setOpaque(true);
        cedulaTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        cedulaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaTxtActionPerformed(evt);
            }
        });
        add(cedulaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 140, 30));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 140, 10));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Ingrese la c√©dula del paciente");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        buscarPacienteButton.setBackground(new java.awt.Color(18, 84, 136));
        buscarPacienteButton.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        buscarPacienteButton.setForeground(new java.awt.Color(255, 255, 255));
        buscarPacienteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/search_1.png"))); // NOI18N
        buscarPacienteButton.setText("Buscar Paciente");
        buscarPacienteButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buscarPacienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPacienteButtonActionPerformed(evt);
            }
        });
        add(buscarPacienteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 200, -1));

        nombreLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        nombreLabel.setForeground(new java.awt.Color(51, 51, 51));
        nombreLabel.setText("nombre");
        add(nombreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        apellidoLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        apellidoLabel.setForeground(new java.awt.Color(51, 51, 51));
        apellidoLabel.setText("apellido");
        add(apellidoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, -1, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Encontrado:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        modificarPacienteButton.setBackground(new java.awt.Color(0, 204, 204));
        modificarPacienteButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        modificarPacienteButton.setForeground(new java.awt.Color(0, 0, 0));
        modificarPacienteButton.setText("Modificar");
        modificarPacienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarPacienteButtonActionPerformed(evt);
            }
        });
        add(modificarPacienteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 150, 40));

        tituloLabel.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        tituloLabel.setForeground(new java.awt.Color(102, 0, 153));
        tituloLabel.setText("Triaje");
        add(tituloLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jSeparator10.setBackground(new java.awt.Color(81, 3, 23));
        add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 760, 20));

        fondo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fondo.setForeground(new java.awt.Color(51, 51, 51));
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/backgroundMain.jpg"))); // NOI18N
        add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void cedulaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaTxtActionPerformed

    }//GEN-LAST:event_cedulaTxtActionPerformed

    private void buscarPacienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPacienteButtonActionPerformed

        String cedula = cedulaTxt.getText();
        actualizarPacienteActual(cedula);
        vaciarCampos();
        // Si se ha encontrado un paciente, entonces
        if (pacienteActual != null) {
            TriajeGui triajeGui = new TriajeGui(pacienteActual);
            triajeGui.setVisible(true);
        }
    }//GEN-LAST:event_buscarPacienteButtonActionPerformed

    private void vaciarCampos() {
        cedulaTxt.setText("");

    }

    private void modificarPacienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarPacienteButtonActionPerformed
        ModificarPacienteGui ventanaModificar = new ModificarPacienteGui(pacienteActual);
        ventanaModificar.setVisible(true);
        ventanaModificar.setLocationRelativeTo(null);
        actualizarInfo();
    }//GEN-LAST:event_modificarPacienteButtonActionPerformed

    public void setUsuario(ListaPacientes usuarioListaPacientes) {
        TriajePanel.listaPacientes = usuarioListaPacientes;
    }

    public void actualizarListaPacientes() {
        listaPacientes = MainScreen.getListaPacientes();

        dlm.removeAllElements();
        String doctorId = MainScreen.getUserID();
        listaPacientes.getPacientes().forEach(paciente -> {
            if (paciente.getIdMedicoResponsable().equals(doctorId)) {
                dlm.addElement(paciente.toString());

            } else if (doctorId.equals("admin")) {
                dlm.addElement(paciente.toString());
            }
        });
    }

    /*
    public void actualizarListaPacientesCedula(String cedula) {
        listaPacientes = MainScreen.getListaPacientes();

        dlm.removeAllElements();
        listaPacientes.getPacientes().forEach(paciente -> {
            if (paciente.getCedula().equals(cedula)) {
                dlm.addElement(paciente.toString());
            }
        });
    }
     */
    public void actualizarListaPacientesMedico(String cedula) {
        listaPacientes = MainScreen.getListaPacientes();

        dlm.removeAllElements();
        listaPacientes.getPacientes().forEach(paciente -> {
            if (paciente.getIdMedicoResponsable().equals(cedula)) {
                dlm.addElement(paciente.toString());
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JButton buscarPacienteButton;
    private javax.swing.JTextField cedulaTxt;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton modificarPacienteButton;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JLabel tituloLabel;
    // End of variables declaration//GEN-END:variables

    public void setInformation() {

    }

    private Paciente buscarPaciente(String cedula) {
        for (Paciente paciente : listaPacientes.getPacientes()) {
            if (paciente.getCedula().equals(cedula)) {
                return paciente;
            }
        }
        return null;
    }

    private void actualizarPacienteActual(String idSeleccion) {
        listaPacientes = MainScreen.getListaPacientes();
        this.pacienteActual = buscarPaciente(idSeleccion);
        if (pacienteActual != null) {
            if (pacienteActual.getIdMedicoResponsable().equals(MainScreen.getUserID())) {
                modificarPacienteButton.setVisible(true);
                actualizarInfo();
            } else {
                JOptionPane.showMessageDialog(null, "Paciente a cargo de otro m√©dico");
            }

            // Habilita los botones
        } else {
            JOptionPane.showMessageDialog(null, "No encontrado");
        }
    }

    private void actualizarInfo() {
        nombreLabel.setText("Nombre: " + pacienteActual.getNombre());
        apellidoLabel.setText("Apellido: " + pacienteActual.getApellido());
        actualizarListaPacientes();
    }
}
