package app.gui.inicio;

import app.logic.Fecha;
import app.logic.Usuario;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Programa BrainUP InicioPanel permite entrar y registrar
 *
 * @author Valverde, Vinueza, Vintimilla
 */
public class registroMedicoPanel extends javax.swing.JPanel {

    // Atributo de lista
    private static List<Usuario> usuarios;
    private boolean avatarSeleccionado = false;
    private int avatar;
    private Usuario usuario;

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    /**
     * Creates new form inicioPanel
     *
     * @param usuario
     */
    public registroMedicoPanel(Usuario usuario) {
        initComponents();
        // Invoca al método actualizarFecha enviando un objeto de fecha actual para actualizar el label fecha con la fecha actual 
        actualizarFecha(new Fecha());
        this.usuario = usuario;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        fechaLabel = new javax.swing.JLabel();
        bienvenidaLabel = new javax.swing.JLabel();
        msg2 = new javax.swing.JLabel();
        avatarLogo = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        diaSpinner = new javax.swing.JSpinner();
        jSeparator4 = new javax.swing.JSeparator();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        anioSpinner = new javax.swing.JSpinner();
        jTextField4 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jToggleButton2 = new javax.swing.JToggleButton();
        registrarBtn = new javax.swing.JButton();
        mesCombo = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel11 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(870, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(18, 84, 136));
        jPanel1.setForeground(new java.awt.Color(255, 153, 153));

        fechaLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fechaLabel.setForeground(new java.awt.Color(255, 255, 255));
        fechaLabel.setText("El día de hoy es -- de -- del año --");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(fechaLabel)
                .addContainerGap(468, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(fechaLabel)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        bg.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 870, 60));

        bienvenidaLabel.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        bienvenidaLabel.setForeground(new java.awt.Color(102, 0, 153));
        bienvenidaLabel.setText("Registrar un médico");
        bg.add(bienvenidaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        msg2.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        msg2.setForeground(new java.awt.Color(0, 0, 102));
        bg.add(msg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, -1, -1));
        bg.add(avatarLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 70, 70));

        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setBorder(null);
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField2.setOpaque(true);
        jTextField2.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        bg.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 340, 30));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 340, 10));

        jTextField3.setBackground(new java.awt.Color(51, 51, 51));
        jTextField3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setBorder(null);
        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField3.setOpaque(true);
        jTextField3.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        bg.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 340, 30));

        jLabel12.setBackground(new java.awt.Color(51, 51, 51));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Día");
        bg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 510, -1, 20));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Nombre");
        bg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, -1, 30));

        diaSpinner.setValue(1);
        bg.add(diaSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, 90, 30));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 430, 20));

        jToggleButton4.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar4.png"))); // NOI18N
        jToggleButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 630, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Fecha de Nacimiento");
        bg.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, -1, -1));

        jLabel8.setBackground(new java.awt.Color(51, 51, 51));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Año");
        bg.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 510, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Cédula");
        bg.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, -1, -1));

        jToggleButton1.setBackground(new java.awt.Color(153, 153, 255));
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar1.png"))); // NOI18N
        jToggleButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 630, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Apellido");
        bg.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));
        bg.add(anioSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 540, 100, 30));

        jTextField4.setBackground(new java.awt.Color(51, 51, 51));
        jTextField4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setBorder(null);
        jTextField4.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField4.setOpaque(true);
        jTextField4.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        bg.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 340, 30));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 340, 10));

        jToggleButton2.setBackground(new java.awt.Color(153, 153, 255));
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar2.png"))); // NOI18N
        jToggleButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 630, -1, -1));

        registrarBtn.setBackground(new java.awt.Color(18, 84, 136));
        registrarBtn.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        registrarBtn.setForeground(new java.awt.Color(255, 255, 255));
        registrarBtn.setText("Registrar");
        registrarBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        registrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarBtnActionPerformed(evt);
            }
        });
        bg.add(registrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 740, 220, 40));

        mesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        mesCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesComboActionPerformed(evt);
            }
        });
        bg.add(mesCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 540, 110, 30));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 340, 10));

        jLabel10.setBackground(new java.awt.Color(51, 51, 51));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Seleccione un avatar");
        bg.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 590, -1, -1));

        jToggleButton3.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar3.png"))); // NOI18N
        jToggleButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 630, -1, -1));

        jLabel11.setBackground(new java.awt.Color(51, 51, 51));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Mes");
        bg.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 510, -1, -1));

        fondo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fondo.setForeground(new java.awt.Color(51, 51, 51));
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/backgroundMain.jpg"))); // NOI18N
        bg.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 800));

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 800));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        jTextField2.setText("");
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed

    }//GEN-LAST:event_jTextField4ActionPerformed

    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarBtnActionPerformed
        boolean correcto = false;
        boolean correctoCampos = false;
        boolean valid = true;

        // Obtiene los valores ingresados
        String nombre = jTextField2.getText();
        String apellido = jTextField3.getText();
        int dia = (Integer) diaSpinner.getValue();
        String mes = mesCombo.getSelectedItem().toString();
        int anio = (Integer) anioSpinner.getValue();
        String cedula = jTextField4.getText();
        Fecha nacimiento = new Fecha();

        // Se verifica que se ingresen datos
        // Verifica que nombre solamente contenga letras
        if (nombre.length() <= 0 && apellido.length() <= 0) {
            JOptionPane.showMessageDialog(null, "Ingrese su nombre y apellido");
            valid = false;
        } else {
            if (nombre.length() > 0) {
                if (nombre.matches("[a-zA-Z]+")) {
                    valid = true;
                } else {
                    JOptionPane.showMessageDialog(null, "El nombre solo puede contener letras");
                    valid = false;
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío");
                valid = false;
            }
            if (apellido.length() > 0 && valid) {
                if (apellido.matches("[a-zA-Z]+")) {
                    valid = true;
                } else {
                    JOptionPane.showMessageDialog(null, "El apellido solo puede contener letras");
                    valid = false;
                }
            } else {
                if (apellido.length() <= 0) {
                    JOptionPane.showMessageDialog(null, "El apellido no puede estar vacío");
                    valid = false;
                }

            }
        }

        // Verifica que la cedula sea valida solamente si los campos anteriormente se validaron
        if (valid) {
            valid = validarCedula(cedula);
            if (valid) {
                // Verifica que la cedula sea unica
                valid = validarCedulaUnica(cedula);
            }
        }

        // Verifica que se hayan ingresado valores en nombre y apellido
        if (nombre.length() > 1 && apellido.length() > 1) {
            correctoCampos = true;
        }

        // Verifica que la fecha ingresada se encuentre dentro de los rangos permitidos
        if (dia < 1 || dia > 31 && correctoCampos) {
            JOptionPane.showMessageDialog(null, "Día inválido");

            correctoCampos = false;
        }

        if (dia >= 1 && dia <= 31) {
            correctoCampos = true;
        }

        // Verifica que el año ingresado sea valido y la edad del usuairo sea mayor a 30
        if (anio >= 1925 || anio <= 2022) {
            if (((new Fecha().getAnio()) - anio) > 30) {
                correctoCampos = true;
            } else {
                JOptionPane.showMessageDialog(null, "No se encuentra en el rango de edad (30 años)");
                correctoCampos = false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "El año ingresado se encuentra fuera del rango permitido");
            correctoCampos = false;
        }

        if (anio < 1925 || anio > 2022 && correctoCampos) {
            JOptionPane.showMessageDialog(null, "Año inválido");
            correctoCampos = false;
        }

        // Intenta inicializar la fecha con los datos ingresados
        try {
            nacimiento.setDia(dia);
            nacimiento.setMes(nacimiento.setMesString(mes));
            nacimiento.setAnio(anio);

            correcto = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Verifique los datos en fecha");
            correcto = false;
        }

        // Al final cuando el avatar ya ha sido seleccionado, se procede a continuar a la seleccion de la etapa
        if (avatarSeleccionado && valid && correctoCampos && correcto) {
            // Crea un usuario usando el constructor por parametros
            System.out.println("registrado");
            //Usuario usuarioNuevo = new Usuario(cedula, nombre, apellido, avatar, 0, nacimiento);
            // TODO registrar en database

        } else {
            // En caso de que el avatar no haya sido seleccionado
            if (valid && correcto && correctoCampos) {
                JOptionPane.showMessageDialog(null, "Seleccione un avatar");
            }
        }
    }//GEN-LAST:event_registrarBtnActionPerformed

    private void mesComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesComboActionPerformed

    }//GEN-LAST:event_mesComboActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton4.setEnabled(true);
            avatar = 4;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton3.setEnabled(true);
            avatar = 3;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton2.setEnabled(true);
            avatar = 2;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton1.setEnabled(true);
            avatar = 1;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anioSpinner;
    private javax.swing.JLabel avatarLogo;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel bienvenidaLabel;
    private javax.swing.JSpinner diaSpinner;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JComboBox<String> mesCombo;
    private javax.swing.JLabel msg2;
    private javax.swing.JButton registrarBtn;
    // End of variables declaration//GEN-END:variables

    private void actualizarFecha(Fecha actual) {
        fechaLabel.setText("Hoy es " + actual.getDia() + " de " + actual.getMesString() + " del año " + actual.getAnio() + " ");
    }

    /**
     * Deshabilita los botones de los avatares
     */
    private void deshabilitarBotones() {
        jToggleButton1.setEnabled(false);
        jToggleButton2.setEnabled(false);
        jToggleButton3.setEnabled(false);
        jToggleButton4.setEnabled(false);
    }

    /**
     * Habilita los botones de los avatares
     */
    private void habilitarBotones() {
        jToggleButton1.setEnabled(true);
        jToggleButton2.setEnabled(true);
        jToggleButton3.setEnabled(true);
        jToggleButton4.setEnabled(true);
    }

    /**
     * Recibe como parametro la cedula y verifica si es una cédula Ecuatoriana
     * válida
     *
     * @param document String cédula a evaluar
     * @return boolean true si es una cédula válida, false en caso de ser
     * inválida
     */
    private boolean validarCedula(String document) {
        byte sum = 0;
        try {
            if (document.trim().length() != 10) {
                JOptionPane.showMessageDialog(null, "Cédula debe constar de 10 dígitos");
                return false;
            }
            String[] data = document.split("");
            byte verifier = Byte.parseByte(data[0] + data[1]);
            if (verifier < 1 || verifier > 24) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            byte[] digits = new byte[data.length];
            for (byte i = 0; i < digits.length; i++) {
                digits[i] = Byte.parseByte(data[i]);
            }
            if (digits[2] > 6) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            for (byte i = 0; i < digits.length - 1; i++) {
                if (i % 2 == 0) {
                    verifier = (byte) (digits[i] * 2);
                    if (verifier > 9) {
                        verifier = (byte) (verifier - 9);
                    }
                } else {
                    verifier = digits[i];
                }
                sum = (byte) (sum + verifier);
            }
            if ((sum - (sum % 10) + 10 - sum) == digits[9]) {
                return true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
        return false;
    }

    /**
     * Verifica que la cedula sea unica buscandola en la lista
     *
     * @param cedula cedula a buscar
     * @return true si no existe, false si ya existe
     */
    private boolean validarCedulaUnica(String cedula) {
        // Busca en la lista usuarios si ya existe la cedula
        for (Usuario usuario : usuarios) {
            if (usuario.getCedula().equals(cedula)) {
                JOptionPane.showMessageDialog(null, "Ya existe un usuario con esa cedula");
                return false;
            }
        }
        // En caso de no encontrarla
        return true;
    }
}
