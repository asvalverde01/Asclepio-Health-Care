package app.gui.medico;

import app.dataStruct.Lista;
import app.gui.inicio.InicioForm;
import app.logic.Fecha;
import app.logic.users.Administrador;
import app.logic.users.Medico;
import app.logic.users.Usuario;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 * Programa AsclepioHC InicioPanel permite entrar y registrar
 *
 */
public class RegistroMedicoPanel extends javax.swing.JPanel {

    // Atributo de lista
    private static Lista usuarios;
    private boolean avatarSeleccionado = false;
    private int avatar;
    private Administrador usuario;

    public void setUsuario(Administrador usuario) {
        this.usuario = usuario;
    }

    /**
     * Creates new form inicioPanel
     *
     * @param usuario
     */
    public RegistroMedicoPanel(Administrador usuario) {
        initComponents();
        // Invoca al método actualizarFecha enviando un objeto de fecha actual para actualizar el label fecha con la fecha actual 
        this.usuario = usuario;
        usuarios = InicioForm.getUsuarios();
        anioSpinner.setValue(2000);

        // Permite solamente ingresar letras en el text field
        nombreTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isAlphabetic(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
                    e.consume();  // ignore the event if it's not an alphabet
                }
            }
        }
        );

        // Permite solamente ingresar letras en el text field
        apellidoTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isAlphabetic(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
                    e.consume();  // ignore the event if it's not an alphabet
                }
            }
        }
        );

        // Permite solamente ingresar dígitos en el text field
        cedulaTxt.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
                    e.consume();  // ignore the event if it's not an alphabet
                }
            }
        }
        );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        nombreTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        apellidoTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        diaSpinner = new javax.swing.JSpinner();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        anioSpinner = new javax.swing.JSpinner();
        cedulaTxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jToggleButton2 = new javax.swing.JToggleButton();
        registrarBtn = new javax.swing.JButton();
        especialidadCombo = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        usuarioTxt = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        correoTxt = new javax.swing.JTextField();
        correoLbl = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        mesCombo = new javax.swing.JComboBox<>();
        contraseniaRepTxt = new javax.swing.JPasswordField();
        contraseniaTxt = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        sexoCombo = new javax.swing.JComboBox<>();
        bienvenidaLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        fondo = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(870, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreTxt.setBackground(new java.awt.Color(102, 102, 102));
        nombreTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        nombreTxt.setForeground(new java.awt.Color(255, 255, 255));
        nombreTxt.setBorder(null);
        nombreTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        nombreTxt.setOpaque(true);
        nombreTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        nombreTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTxtActionPerformed(evt);
            }
        });
        bg.add(nombreTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 190, 30));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 190, 10));

        apellidoTxt.setBackground(new java.awt.Color(102, 102, 102));
        apellidoTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        apellidoTxt.setForeground(new java.awt.Color(255, 255, 255));
        apellidoTxt.setBorder(null);
        apellidoTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        apellidoTxt.setOpaque(true);
        apellidoTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        apellidoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidoTxtActionPerformed(evt);
            }
        });
        bg.add(apellidoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 190, 30));

        jLabel12.setBackground(new java.awt.Color(51, 51, 51));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Día");
        bg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, 20));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Complete la información");
        bg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 20));

        diaSpinner.setValue(1);
        bg.add(diaSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 90, 30));

        jToggleButton4.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar4.png"))); // NOI18N
        jToggleButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 460, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Fecha de Nacimiento");
        bg.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, -1, -1));

        jLabel8.setBackground(new java.awt.Color(51, 51, 51));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Año");
        bg.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, -1, -1));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Especialidad");
        bg.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, -1, -1));

        jToggleButton1.setBackground(new java.awt.Color(153, 153, 255));
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar1.png"))); // NOI18N
        jToggleButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Apellido");
        bg.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));
        bg.add(anioSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 100, 30));

        cedulaTxt.setBackground(new java.awt.Color(102, 102, 102));
        cedulaTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        cedulaTxt.setForeground(new java.awt.Color(255, 255, 255));
        cedulaTxt.setBorder(null);
        cedulaTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        cedulaTxt.setOpaque(true);
        cedulaTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        cedulaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaTxtActionPerformed(evt);
            }
        });
        bg.add(cedulaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 190, 30));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 190, 10));

        jToggleButton2.setBackground(new java.awt.Color(153, 153, 255));
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar2.png"))); // NOI18N
        jToggleButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, -1, -1));

        registrarBtn.setBackground(new java.awt.Color(18, 84, 136));
        registrarBtn.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        registrarBtn.setForeground(new java.awt.Color(255, 255, 255));
        registrarBtn.setText("Registrar");
        registrarBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        registrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarBtnActionPerformed(evt);
            }
        });
        bg.add(registrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 550, 220, 40));

        especialidadCombo.setBackground(new java.awt.Color(102, 102, 102));
        especialidadCombo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        especialidadCombo.setForeground(new java.awt.Color(51, 51, 51));
        especialidadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Emergencia", "Medicina Interna", "Cardiología", "Neurología", "Dermatología", " ", " ", " " }));
        especialidadCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialidadComboActionPerformed(evt);
            }
        });
        bg.add(especialidadCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 190, 30));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 190, 10));

        jLabel10.setBackground(new java.awt.Color(51, 51, 51));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Seleccione un avatar");
        bg.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, -1, -1));

        jToggleButton3.setBackground(new java.awt.Color(204, 153, 255));
        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/avatar/avatar3.png"))); // NOI18N
        jToggleButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        bg.add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, -1, -1));

        jLabel11.setBackground(new java.awt.Color(51, 51, 51));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Mes");
        bg.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, -1, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Usuario");
        bg.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, 30));

        usuarioTxt.setBackground(new java.awt.Color(102, 102, 102));
        usuarioTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        usuarioTxt.setForeground(new java.awt.Color(255, 255, 255));
        usuarioTxt.setBorder(null);
        usuarioTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        usuarioTxt.setOpaque(true);
        usuarioTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        usuarioTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioTxtActionPerformed(evt);
            }
        });
        bg.add(usuarioTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 190, 30));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 190, 10));

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 190, 10));

        correoTxt.setBackground(new java.awt.Color(102, 102, 102));
        correoTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        correoTxt.setForeground(new java.awt.Color(255, 255, 255));
        correoTxt.setBorder(null);
        correoTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        correoTxt.setOpaque(true);
        correoTxt.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        correoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correoTxtActionPerformed(evt);
            }
        });
        bg.add(correoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 190, 30));

        correoLbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        correoLbl.setForeground(new java.awt.Color(0, 51, 51));
        correoLbl.setText("Correo");
        bg.add(correoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, -1));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 51));
        jLabel13.setText("Contraseña");
        bg.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, 30));

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 190, 10));

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        bg.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 190, 10));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 51));
        jLabel14.setText("Repetir Contraseña");
        bg.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Cédula");
        bg.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, -1, -1));

        mesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        mesCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesComboActionPerformed(evt);
            }
        });
        bg.add(mesCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 110, 30));

        contraseniaRepTxt.setBackground(new java.awt.Color(102, 102, 102));
        contraseniaRepTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        bg.add(contraseniaRepTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 190, 30));

        contraseniaTxt.setBackground(new java.awt.Color(102, 102, 102));
        contraseniaTxt.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        bg.add(contraseniaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 190, 30));

        jLabel15.setBackground(new java.awt.Color(51, 51, 51));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Sexo");
        bg.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, -1, -1));

        sexoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femenino", "Masculino" }));
        sexoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoComboActionPerformed(evt);
            }
        });
        bg.add(sexoCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, 190, 30));

        bienvenidaLabel1.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        bienvenidaLabel1.setForeground(new java.awt.Color(102, 0, 153));
        bienvenidaLabel1.setText("Registrar un médico");
        bg.add(bienvenidaLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 51));
        jLabel16.setText("Nombre");
        bg.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, 30));

        jSeparator10.setBackground(new java.awt.Color(81, 3, 23));
        bg.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 760, 20));

        fondo.setBackground(new java.awt.Color(102, 102, 102));
        fondo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        fondo.setForeground(new java.awt.Color(51, 51, 51));
        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/backgroundMain.jpg"))); // NOI18N
        bg.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void nombreTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTxtActionPerformed
        // TODO add your handling code here:
        nombreTxt.setText("");
    }//GEN-LAST:event_nombreTxtActionPerformed

    private void apellidoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoTxtActionPerformed

    private void cedulaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaTxtActionPerformed

    }//GEN-LAST:event_cedulaTxtActionPerformed

    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarBtnActionPerformed
        // Actualiza la lista de usuarios  
        usuarios = InicioForm.getUsuarios();
        boolean correcto = false;
        boolean correctoCampos = false;
        boolean valid = true;
        boolean contraseniaIgual = false;

        // Obtiene los valores ingresados
        String nombre = nombreTxt.getText();
        String apellido = apellidoTxt.getText();
        String usuario = usuarioTxt.getText();
        String contrasenia = contraseniaTxt.getText();
        String contraseniaRep = contraseniaRepTxt.getText();
        String especialidad = especialidadCombo.getSelectedItem().toString();
        String correo = correoTxt.getText();
        String sexo = sexoCombo.getSelectedItem().toString();

        int dia = (Integer) diaSpinner.getValue();
        String mes = mesCombo.getSelectedItem().toString();
        int anio = (Integer) anioSpinner.getValue();
        String cedula = cedulaTxt.getText();
        Fecha nacimiento = new Fecha();

        // Se verifica que se ingresen datos
        // Verifica que nombre solamente contenga letras
        if (nombre.length() <= 0 && apellido.length() <= 0) {
            JOptionPane.showMessageDialog(null, "Ingrese nombre y apellido");
            valid = false;
        } else {
            if (nombre.length() > 0) {
                if (nombre.matches("[a-zA-Z]+")) {
                    valid = true;
                } else {
                    JOptionPane.showMessageDialog(null, "El nombre solo puede contener letras");
                    valid = false;
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío");
                valid = false;
            }
            if (apellido.length() > 0 && valid) {
                if (apellido.matches("[a-zA-Z]+")) {
                    valid = true;
                } else {
                    JOptionPane.showMessageDialog(null, "El apellido solo puede contener letras");
                    valid = false;
                }
            } else {
                if (apellido.length() <= 0) {
                    JOptionPane.showMessageDialog(null, "El apellido no puede estar vacío");
                    valid = false;
                }
            }
        }

        // Verifica que nombre solamente contenga letras
        if (contrasenia.length() <= 0 && contraseniaRep.length() <= 0) {
            JOptionPane.showMessageDialog(null, "Ingrese contraseña");
            contraseniaIgual = false;
        } else {
            // Compara que las contraseñas sean iguales
            if (contrasenia.equals(contraseniaRep)) {
                contraseniaIgual = true;

            } else {
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
                contraseniaIgual = false;

            }

        }

        // Verifica que la cedula sea valida solamente si los campos anteriormente se validaron
        if (valid) {
            valid = validarCedula(cedula);
            if (valid) {
                // Verifica que la cedula sea unica
                if (validarCedulaUnica(cedula)) {
                    valid = validarUsuarioUnico(usuario);
                } else {
                    valid = false;
                }
            }
        }

        // Verifica que se hayan ingresado valores en nombre y apellido
        if (nombre.length() > 1 && apellido.length() > 1) {
            correctoCampos = true;
        }

        // Verifica que la fecha ingresada se encuentre dentro de los rangos permitidos
        if (dia < 1 || dia > 31 && correctoCampos) {
            JOptionPane.showMessageDialog(null, "Día inválido");

            correctoCampos = false;
        }

        if (dia >= 1 && dia <= 31) {
            correctoCampos = true;
        }

        // Verifica que el año ingresado sea valido y la edad del usuairo sea mayor a 18
        if (anio >= 1925 || anio <= 2022) {
            if (((new Fecha().getAnio()) - anio) > 18) {
                correctoCampos = true;
            } else {
                JOptionPane.showMessageDialog(null, "No se encuentra en el rango de edad (18 años)");
                correctoCampos = false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "El año ingresado se encuentra fuera del rango permitido");
            correctoCampos = false;
        }
        if (anio < 1925 || anio > 2022 && correctoCampos) {
            JOptionPane.showMessageDialog(null, "Año inválido");
            correctoCampos = false;
        }

        // Intenta inicializar la fecha con los datos ingresados
        try {
            nacimiento.setDia(dia);
            nacimiento.setMes(nacimiento.setMesString(mes));
            nacimiento.setAnio(anio);

            correcto = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Verifique los datos en fecha");
            correcto = false;
        }

        // Al final cuando el avatar ya ha sido seleccionado, se procede a continuar a la seleccion de la etapa
        if (avatarSeleccionado && valid && correctoCampos && correcto && contraseniaIgual) {
            // Crea un usuario usando el constructor por parametros
            Medico usuarioNuevo = new Medico(especialidad, correo, usuario, contrasenia, nombre, apellido, "Medico", cedula, avatar, sexo, nacimiento);
            if (this.usuario.registrarUsuarioDataBase(usuarioNuevo)) {
                JOptionPane.showMessageDialog(null, "Registrado correctamente");
                vaciarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Error");
            }
        } else {
            // En caso de que el avatar no haya sido seleccionado
            if (valid && correctoCampos && correcto && contraseniaIgual) {
                JOptionPane.showMessageDialog(null, "Seleccione un avatar");
            }
        }
    }//GEN-LAST:event_registrarBtnActionPerformed

    private void especialidadComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialidadComboActionPerformed

    }//GEN-LAST:event_especialidadComboActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton4.setEnabled(true);
            avatar = 4;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton3.setEnabled(true);
            avatar = 3;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton2.setEnabled(true);
            avatar = 2;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;

        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (!(avatarSeleccionado)) {
            deshabilitarBotones();
            jToggleButton1.setEnabled(true);
            avatar = 1;
            avatarSeleccionado = true;
        } else {
            habilitarBotones();
            avatar = 0;
            avatarSeleccionado = false;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void usuarioTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioTxtActionPerformed

    private void correoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_correoTxtActionPerformed

    private void mesComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesComboActionPerformed

    private void sexoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexoComboActionPerformed

    /**
     * Deshabilita los botones de los avatares
     */
    private void deshabilitarBotones() {
        jToggleButton1.setEnabled(false);
        jToggleButton2.setEnabled(false);
        jToggleButton3.setEnabled(false);
        jToggleButton4.setEnabled(false);
    }

    /**
     * Habilita los botones de los avatares
     */
    private void habilitarBotones() {
        jToggleButton1.setEnabled(true);
        jToggleButton2.setEnabled(true);
        jToggleButton3.setEnabled(true);
        jToggleButton4.setEnabled(true);
    }

    /**
     * Recibe como parametro la cedula y verifica si es una cédula Ecuatoriana
     * válida
     *
     * @param document String cédula a evaluar
     * @return boolean true si es una cédula válida, false en caso de ser
     * inválida
     */
    private boolean validarCedula(String document) {
        byte sum = 0;
        try {
            if (document.trim().length() != 10) {
                JOptionPane.showMessageDialog(null, "Cédula debe constar de 10 dígitos");
                return false;
            }
            String[] data = document.split("");
            byte verifier = Byte.parseByte(data[0] + data[1]);
            if (verifier < 1 || verifier > 24) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            byte[] digits = new byte[data.length];
            for (byte i = 0; i < digits.length; i++) {
                digits[i] = Byte.parseByte(data[i]);
            }
            if (digits[2] > 6) {
                JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
                return false;
            }
            for (byte i = 0; i < digits.length - 1; i++) {
                if (i % 2 == 0) {
                    verifier = (byte) (digits[i] * 2);
                    if (verifier > 9) {
                        verifier = (byte) (verifier - 9);
                    }
                } else {
                    verifier = digits[i];
                }
                sum = (byte) (sum + verifier);
            }
            if ((sum - (sum % 10) + 10 - sum) == digits[9]) {
                return true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Formato de cédula inválido");
        return false;
    }

    /**
     * Verifica que la cedula sea unica buscandola en la lista
     *
     * @param cedula cedula a buscar
     * @return true si no existe, false si ya existe
     */
    private boolean validarCedulaUnica(String cedula) {
        // Busca en la lista usuarios si ya existe la cedula
        for (Usuario usuario : usuarios.getUsuarios()) {
            if (usuario.getCedula().equals(cedula)) {
                JOptionPane.showMessageDialog(null, "Médico ya registrado");
                return false;
            }
        }
        // En caso de no encontrarla
        return true;
    }

    private boolean validarUsuarioUnico(String usuairoNombre) {
        // Busca en la lista usuarios si ya existe el nombre de 
        for (Usuario usuario : usuarios.getUsuarios()) {
            if (usuario.getUsuario().equals(usuairoNombre)) {
                JOptionPane.showMessageDialog(null, "El nombre de usuario ''" + usuairoNombre + "'' ya está en uso");
                return false;
            }
        }
        // En caso de no encontrar
        return true;
    }

    private void vaciarCampos() {
        nombreTxt.setText("");
        apellidoTxt.setText("");
        usuarioTxt.setText("");
        correoTxt.setText("");
        contraseniaTxt.setText("");
        contraseniaRepTxt.setText("");
        cedulaTxt.setText("");
        diaSpinner.setValue(1);
        anioSpinner.setValue(2000);
        habilitarBotones();
        avatar = 0;
        avatarSeleccionado = false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anioSpinner;
    private javax.swing.JTextField apellidoTxt;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel bienvenidaLabel1;
    private javax.swing.JTextField cedulaTxt;
    private javax.swing.JPasswordField contraseniaRepTxt;
    private javax.swing.JPasswordField contraseniaTxt;
    private javax.swing.JLabel correoLbl;
    private javax.swing.JTextField correoTxt;
    private javax.swing.JSpinner diaSpinner;
    private javax.swing.JComboBox<String> especialidadCombo;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JComboBox<String> mesCombo;
    private javax.swing.JTextField nombreTxt;
    private javax.swing.JButton registrarBtn;
    private javax.swing.JComboBox<String> sexoCombo;
    private javax.swing.JTextField usuarioTxt;
    // End of variables declaration//GEN-END:variables

}
